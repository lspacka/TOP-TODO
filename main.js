/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>p});var r=t(354),o=t.n(r),i=t(314),A=t.n(i),a=t(417),l=t.n(a),s=new URL(t(321),t.b),d=A()(o()),c=l()(s);d.push([n.id,`/* #DBF3F1 */\n/* this code got out of hand before I even noticed. prolly the messiest css I've ever written. w/e, couldnt be bothered tbh... */\n/* might clean it up someday */\n\n@font-face {\n  font-family: 'geist';\n  src: url(${c});\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: rgb(19, 30, 33);\n  font-family: 'courier';\n  color: lightcyan;\n  /* height: 100vh; */\n  /* padding-top: 1rem; */\n}\n\nheader {\n  border-bottom: 1px solid lightblue;\n  font-size: 2rem;\n  margin-top: 1rem;\n  display: flex;\n  align-items: end;\n}\n\nlabel {\n  font-size: 0.83rem;\n  font-weight: bold;\n}\n\n.content {\n  padding: 1.5rem;\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n}\n\n.projects {\n  border-right: 3px solid lightblue;\n  max-width: 250px;\n}\n\n.tasks {\n  width: 60%;\n}\n\n\n\n.project-display {\n  width: 100%;\n  /* display: flex; */\n}\n\n.project-li {\n  margin-top: 15px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-content: center;\n  border-radius: 5px;\n  border: solid 2px rgb(51, 59, 67);\n  height: 30px;\n  padding: 0 0.4rem 0 0.4rem;\n}\n\n.project-li:hover {\n  border-color: #b1e3df;\n}\n\n.user-project-button,\n#delete-project {\n  background-color: transparent;\n}\n\n.clear-projects {\n  margin-left: 53px;\n}\n\n#delete-project {\n  min-width: fit-content;\n  width: 25px;\n  height: fit-content;\n  font-size: 0.9rem;\n  /* background-color: red; */\n  justify-self: end;\n  border-radius: 0;\n  color: rgb(161, 168, 176);\n}\n\n#delete-project:hover {\n  color: #DBF3F1;\n  font-weight: bold;\n}\n\n\n\n.user-projects{\n  margin-top: 40px;\n  max-width: 90%;\n}\n\n.user-projects > h2 {\n  margin-bottom: 20px;\n}\n\n/* .project-header {\n  margin-bottom: 20px;\n} */\n\n.project-heading {\n  display: flex;\n  margin-bottom: 50px;\n}\n\n.project-heading > button {\n  align-items: end;\n}\n\nbutton {\n  height: 30px;\n  min-width: 90px;\n  background-color:rgb(5, 57, 56);\n  border: none;\n  border-radius: 3px;\n  color: rgb(234, 248, 252);\n  font-family: geist;\n  font-size: 0.76rem;\n}\n\nbutton:not(.user-project-button, .delete-task-button):hover {\n  background-color: rgb(25, 110, 108);\n}\n\n/* .project-button,\n.user-project-button,\n#delete-project {\n  display: block;\n  margin-top: 1.5rem;\n  font-family: geist;\n} */\n\n.default-project-button {\n  display: block;\n  margin-top: 1.5rem;\n  font-family: geist;\n  font-size: 0.7rem;\n  height: 25px;\n  min-width: 85px;\n}\n\n.user-project-button {\n  /* max-width: 90px; */\n  width: 193px;\n  /* width: 100%; */\n  height: 135%;\n  margin: 0;\n  border-radius: 0;\n  text-align: left;\n  flex: 1;\n  transform: translateY(-3px);\n}\n\n.tasks-list {\n  margin-top: 30px;\n  width: 100%;\n}\n\n.tasks-list > li {\n  margin-top: 20px;\n  border-radius: 5px;\n  border: solid 2px rgb(51, 59, 67);\n  padding: 5px 10px 5px 10px;\n  max-width: 100%;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n}\n\n.tasks-list > li:hover {\n  border-color: #8bcdc8;\n}\n\n.task-buttons {\n  display: flex;\n  /* justify-content: end; */\n  /* margin-left: 180px; */\n  right: 0;\n  position: absolute;\n}\n\n.no-date {\n  cursor:context-menu;\n  margin-right: 10px;\n  font-size: 0.97rem;\n  /* z-index: 2; */\n}\n\n.date-input {\n  visibility: hidden;\n  position: absolute;\n  /* margin-right: 20px; */\n}\n\n.detail-button {\n  margin-left: 20px;\n  width: 20px;\n  height: 20px;\n}\n\n.edit-task {\n  margin-left: 20px;\n  width: 15px;\n  height: 15px;\n  transform: translateY(2px);\n}\n\n.addto-important-btn {\n  margin-left: 20px;\n  width: 18px;\n  height: 18px;\n  /* z-index: 1; */\n}\n\n.delete-task-button {\n  margin-left: 20px;\n  min-width: fit-content;\n  width: 18px;\n  height: 20px;\n  font-size: 0.9rem;\n  background-color: transparent;\n  color: rgb(161, 168, 176);\n}\n\n.delete-task-button:hover {\n  color: #DBF3F1;\n  font-weight: bold;\n}\n\n/* .li > p  {\n  max-width: 50%;\n  overflow: hidden;\n} */\n\n.task-modal,\n.task-detail-modal,\n.edit-task-modal {\n  background: rgb(21, 82, 87);\n  z-index: 1;\n  padding: 1rem;\n  padding-left: 1.5rem;\n  margin: 0 auto;\n  /* transform: translateX(-55px); */\n  width: 30%;\n  max-width: auto;\n  border-radius: 0.5rem;\n  border: none;\n  color: rgb(199, 234, 246);\n  font-family: geist;\n  /* transform: translate(25vw, -50vh); */\n}\n\n.project-modal {\n  width: 21.5%;\n  transform: translateY(300px);\n  background: rgb(21, 82, 87);\n  z-index: 1;\n  padding: 1rem;\n  padding-left: 1.5rem;\n  border-radius: 0.5rem;\n  border: none;\n  font-family: geist;\n  color: rgb(199, 234, 246);\n}\n\n.project-name {\n  width: 90%;\n  height: 25px;\n  display: block;\n  margin: 10px 0 10px 0;\n}\n\n.task-detail-modal {\n  font-family: geist;\n  color:rgb(233, 242, 245);\n  height: fit-content;\n}\n\n.task-modal * {\n  margin-bottom: 15px;\n  display: block;\n}\n\n.label {\n  margin-top: 10px;\n  font-weight: bold;\n}\n\ninput {\n  border-radius: 3px;\n  outline: none;\n  border: none;\n}\n\n.task-title {\n  width: 70%;\n  height: 30px;\n}\n\n#edit-title,\n#edit-desc {\n  margin: 15px 0 15px 0;\n}\n\n.task-desc,\n.detail-text {\n  width: 98%;\n  height: 60px;\n  margin-right: 25px;\n  resize: none;\n  /* display: block; */\n}\n\n.detail-text {\n  background-color: transparent;\n  border: none;\n  color: rgb(233, 242, 245);\n  padding: 5px;\n  outline: none;\n  height: 120px;\n}\n\n.modal-buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n}\n\n.modal-button {\n  /* width: 50%; */\n  margin-top: 10px;\n  margin-bottom: 0;\n  /* display: inline; */\n  margin-right: 10px;\n  height: 30px;\n}\n\nul {\n  width: 100%;\n}\n\nli {\n  list-style-type: none;\n  display: flex;\n  width: 100%;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.83);\n  display: none; \n  /* display: flex; */\n  z-index: 1;\n}\n\n.field-required {\n  display: inline;\n  font-size: 0.8rem;\n  font-weight: bold;\n  font-family: geist;\n  color: #ff8800;\n  align-self: end;\n  margin-left: 10px;\n  display: none;\n}\n\n.pro-field-required {\n  display: inline;\n  font-size: 0.6rem;\n  font-weight: bold;\n  font-family: geist;\n  color: #ff8800;\n  align-self: end;\n  display: none;\n}\n\n.task-title-area {\n  display: flex;\n}\n\n.add-project,\n.clear-projects,\n.new-task-btn,\n.clear-tasks {\n  height: 25px;\n  min-width: 80px;\n  font-size: 0.7rem;\n  background-color: rgb(6, 48, 47);\n}\n\n.new-task-btn,\n.clear-tasks {\n  font-size: 0.7rem;\n  min-width: 75px;\n  height: 35px;\n  position: relative;\n}\n\n.heading-buttons {\n  margin-left: 50px;\n  margin-bottom: 7px;\n  display: flex;\n}\n\n/* .new-task-btn {\n  transform: translateX(290px);\n} */\n\n.clear-tasks  {\n  margin-left: 30px;\n} \n\n.close-detail {\n  margin-top: 15px;\n}\n\n.tasks-list > li {\n z-index: 1;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["/* #DBF3F1 */\r\n/* this code got out of hand before I even noticed. prolly the messiest css I've ever written. w/e, couldnt be bothered tbh... */\r\n/* might clean it up someday */\r\n\r\n@font-face {\r\n  font-family: 'geist';\r\n  src: url('/resources/font/Geist.Mono/GeistMono-Light.woff2');\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(19, 30, 33);\r\n  font-family: 'courier';\r\n  color: lightcyan;\r\n  /* height: 100vh; */\r\n  /* padding-top: 1rem; */\r\n}\r\n\r\nheader {\r\n  border-bottom: 1px solid lightblue;\r\n  font-size: 2rem;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  align-items: end;\r\n}\r\n\r\nlabel {\r\n  font-size: 0.83rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.content {\r\n  padding: 1.5rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr;\r\n}\r\n\r\n.projects {\r\n  border-right: 3px solid lightblue;\r\n  max-width: 250px;\r\n}\r\n\r\n.tasks {\r\n  width: 60%;\r\n}\r\n\r\n\r\n\r\n.project-display {\r\n  width: 100%;\r\n  /* display: flex; */\r\n}\r\n\r\n.project-li {\r\n  margin-top: 15px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  align-content: center;\r\n  border-radius: 5px;\r\n  border: solid 2px rgb(51, 59, 67);\r\n  height: 30px;\r\n  padding: 0 0.4rem 0 0.4rem;\r\n}\r\n\r\n.project-li:hover {\r\n  border-color: #b1e3df;\r\n}\r\n\r\n.user-project-button,\r\n#delete-project {\r\n  background-color: transparent;\r\n}\r\n\r\n.clear-projects {\r\n  margin-left: 53px;\r\n}\r\n\r\n#delete-project {\r\n  min-width: fit-content;\r\n  width: 25px;\r\n  height: fit-content;\r\n  font-size: 0.9rem;\r\n  /* background-color: red; */\r\n  justify-self: end;\r\n  border-radius: 0;\r\n  color: rgb(161, 168, 176);\r\n}\r\n\r\n#delete-project:hover {\r\n  color: #DBF3F1;\r\n  font-weight: bold;\r\n}\r\n\r\n\r\n\r\n.user-projects{\r\n  margin-top: 40px;\r\n  max-width: 90%;\r\n}\r\n\r\n.user-projects > h2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* .project-header {\r\n  margin-bottom: 20px;\r\n} */\r\n\r\n.project-heading {\r\n  display: flex;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.project-heading > button {\r\n  align-items: end;\r\n}\r\n\r\nbutton {\r\n  height: 30px;\r\n  min-width: 90px;\r\n  background-color:rgb(5, 57, 56);\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: rgb(234, 248, 252);\r\n  font-family: geist;\r\n  font-size: 0.76rem;\r\n}\r\n\r\nbutton:not(.user-project-button, .delete-task-button):hover {\r\n  background-color: rgb(25, 110, 108);\r\n}\r\n\r\n/* .project-button,\r\n.user-project-button,\r\n#delete-project {\r\n  display: block;\r\n  margin-top: 1.5rem;\r\n  font-family: geist;\r\n} */\r\n\r\n.default-project-button {\r\n  display: block;\r\n  margin-top: 1.5rem;\r\n  font-family: geist;\r\n  font-size: 0.7rem;\r\n  height: 25px;\r\n  min-width: 85px;\r\n}\r\n\r\n.user-project-button {\r\n  /* max-width: 90px; */\r\n  width: 193px;\r\n  /* width: 100%; */\r\n  height: 135%;\r\n  margin: 0;\r\n  border-radius: 0;\r\n  text-align: left;\r\n  flex: 1;\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.tasks-list {\r\n  margin-top: 30px;\r\n  width: 100%;\r\n}\r\n\r\n.tasks-list > li {\r\n  margin-top: 20px;\r\n  border-radius: 5px;\r\n  border: solid 2px rgb(51, 59, 67);\r\n  padding: 5px 10px 5px 10px;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.tasks-list > li:hover {\r\n  border-color: #8bcdc8;\r\n}\r\n\r\n.task-buttons {\r\n  display: flex;\r\n  /* justify-content: end; */\r\n  /* margin-left: 180px; */\r\n  right: 0;\r\n  position: absolute;\r\n}\r\n\r\n.no-date {\r\n  cursor:context-menu;\r\n  margin-right: 10px;\r\n  font-size: 0.97rem;\r\n  /* z-index: 2; */\r\n}\r\n\r\n.date-input {\r\n  visibility: hidden;\r\n  position: absolute;\r\n  /* margin-right: 20px; */\r\n}\r\n\r\n.detail-button {\r\n  margin-left: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.edit-task {\r\n  margin-left: 20px;\r\n  width: 15px;\r\n  height: 15px;\r\n  transform: translateY(2px);\r\n}\r\n\r\n.addto-important-btn {\r\n  margin-left: 20px;\r\n  width: 18px;\r\n  height: 18px;\r\n  /* z-index: 1; */\r\n}\r\n\r\n.delete-task-button {\r\n  margin-left: 20px;\r\n  min-width: fit-content;\r\n  width: 18px;\r\n  height: 20px;\r\n  font-size: 0.9rem;\r\n  background-color: transparent;\r\n  color: rgb(161, 168, 176);\r\n}\r\n\r\n.delete-task-button:hover {\r\n  color: #DBF3F1;\r\n  font-weight: bold;\r\n}\r\n\r\n/* .li > p  {\r\n  max-width: 50%;\r\n  overflow: hidden;\r\n} */\r\n\r\n.task-modal,\r\n.task-detail-modal,\r\n.edit-task-modal {\r\n  background: rgb(21, 82, 87);\r\n  z-index: 1;\r\n  padding: 1rem;\r\n  padding-left: 1.5rem;\r\n  margin: 0 auto;\r\n  /* transform: translateX(-55px); */\r\n  width: 30%;\r\n  max-width: auto;\r\n  border-radius: 0.5rem;\r\n  border: none;\r\n  color: rgb(199, 234, 246);\r\n  font-family: geist;\r\n  /* transform: translate(25vw, -50vh); */\r\n}\r\n\r\n.project-modal {\r\n  width: 21.5%;\r\n  transform: translateY(300px);\r\n  background: rgb(21, 82, 87);\r\n  z-index: 1;\r\n  padding: 1rem;\r\n  padding-left: 1.5rem;\r\n  border-radius: 0.5rem;\r\n  border: none;\r\n  font-family: geist;\r\n  color: rgb(199, 234, 246);\r\n}\r\n\r\n.project-name {\r\n  width: 90%;\r\n  height: 25px;\r\n  display: block;\r\n  margin: 10px 0 10px 0;\r\n}\r\n\r\n.task-detail-modal {\r\n  font-family: geist;\r\n  color:rgb(233, 242, 245);\r\n  height: fit-content;\r\n}\r\n\r\n.task-modal * {\r\n  margin-bottom: 15px;\r\n  display: block;\r\n}\r\n\r\n.label {\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  border-radius: 3px;\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\n.task-title {\r\n  width: 70%;\r\n  height: 30px;\r\n}\r\n\r\n#edit-title,\r\n#edit-desc {\r\n  margin: 15px 0 15px 0;\r\n}\r\n\r\n.task-desc,\r\n.detail-text {\r\n  width: 98%;\r\n  height: 60px;\r\n  margin-right: 25px;\r\n  resize: none;\r\n  /* display: block; */\r\n}\r\n\r\n.detail-text {\r\n  background-color: transparent;\r\n  border: none;\r\n  color: rgb(233, 242, 245);\r\n  padding: 5px;\r\n  outline: none;\r\n  height: 120px;\r\n}\r\n\r\n.modal-buttons {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  width: 100%;\r\n}\r\n\r\n.modal-button {\r\n  /* width: 50%; */\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n  /* display: inline; */\r\n  margin-right: 10px;\r\n  height: 30px;\r\n}\r\n\r\nul {\r\n  width: 100%;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.83);\r\n  display: none; \r\n  /* display: flex; */\r\n  z-index: 1;\r\n}\r\n\r\n.field-required {\r\n  display: inline;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  font-family: geist;\r\n  color: #ff8800;\r\n  align-self: end;\r\n  margin-left: 10px;\r\n  display: none;\r\n}\r\n\r\n.pro-field-required {\r\n  display: inline;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n  font-family: geist;\r\n  color: #ff8800;\r\n  align-self: end;\r\n  display: none;\r\n}\r\n\r\n.task-title-area {\r\n  display: flex;\r\n}\r\n\r\n.add-project,\r\n.clear-projects,\r\n.new-task-btn,\r\n.clear-tasks {\r\n  height: 25px;\r\n  min-width: 80px;\r\n  font-size: 0.7rem;\r\n  background-color: rgb(6, 48, 47);\r\n}\r\n\r\n.new-task-btn,\r\n.clear-tasks {\r\n  font-size: 0.7rem;\r\n  min-width: 75px;\r\n  height: 35px;\r\n  position: relative;\r\n}\r\n\r\n.heading-buttons {\r\n  margin-left: 50px;\r\n  margin-bottom: 7px;\r\n  display: flex;\r\n}\r\n\r\n/* .new-task-btn {\r\n  transform: translateX(290px);\r\n} */\r\n\r\n.clear-tasks  {\r\n  margin-left: 30px;\r\n} \r\n\r\n.close-detail {\r\n  margin-top: 15px;\r\n}\r\n\r\n.tasks-list > li {\r\n z-index: 1;\r\n}\r\n"],sourceRoot:""}]);const p=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(A[l]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&A[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var l=n[a],s=r.base?l[0]+r.base:l[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var p=t(c),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:c,updater:m,references:1})}A.push(c)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var l=r(n,o),s=0;s<i.length;s++){var d=t(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=l}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},321:(n,e,t)=>{n.exports=t.p+"4b74669473c0fb6d7717.woff2"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),i=t(659),A=t.n(i),a=t(56),l=t.n(a),s=t(540),d=t.n(s),c=t(113),p=t.n(c),u=t(208),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=A().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.A,m),u.A&&u.A.locals&&u.A.locals;const g=document.querySelector(".task-detail-modal"),E=document.querySelector(".detail-text"),B=document.querySelector(".overlay"),f=document.querySelector(".content"),C=document.querySelector(".project-name"),h=document.querySelector(".pro-field-required"),b=document.querySelector(".task-title"),x=document.querySelector(".field-required"),y=(document.querySelector(".detail-button"),document.body),k="../resources/icons/eye.png",v="../resources/icons/pencil.png",w="../resources/icons/star.png",j="../resources/icons/star-fill.png";function S(n,e,t,r,o,i){e.innerHTML="";let A=t.tasks;n.textContent=t.name,A.length>0&&A.forEach(((n,a)=>{const l=document.createElement("li"),s=document.createElement("span"),d=document.createElement("span"),c=document.createElement("p"),p=document.createElement("input"),u=document.createElement("img"),m=document.createElement("img"),C=document.createElement("img"),h=document.createElement("button");n.index=a,s.textContent=n.title,d.classList.add("task-buttons"),c.classList.add("no-date"),c.textContent=n.date?n.date:"Add Date",c.setAttribute("title","Add due date"),p.classList.add("date-input"),p.setAttribute("type","date"),u.classList.add("detail-button"),u.setAttribute("src",k),u.setAttribute("title","See Detail"),m.classList.add("edit-task"),m.setAttribute("src",v),m.setAttribute("id",null),m.setAttribute("title","Edit Task"),C.classList.add("addto-important-btn"),C.setAttribute("src",""),C.setAttribute("title","Add to Important"),C.src=n.important?j:w,h.classList.add("delete-task-button"),h.textContent="X",c.addEventListener("click",(n=>{n.stopPropagation(),p.style.visibility="visible"})),p.addEventListener("change",(()=>{n.date=p.value,c.textContent=n.date,p.style.visibility="hidden",function(n,e,t,r,o,i){const A=e[0],a=e[1],l=n.date.split("-"),s=l[0],d=l[1]-1,c=l[2];let p=A.tasks.indexOf(n),u=a.tasks.indexOf(n);const m=new Date(s,d,c),g=new Date,E=new Date(g.getFullYear(),g.getMonth(),g.getDate()-g.getDay()),B=new Date(g.getFullYear(),g.getMonth(),g.getDate()+(6-g.getDay()));m>=E&&m<=B&&!a.tasks.includes(n)&&a.tasks.push(n),(m<E||m>B&&a.tasks.includes(n))&&(a.tasks.splice(u,1),a==t&&r.removeChild(o),a.tasks.forEach(((n,e)=>{n.index=e}))),m.getFullYear()!=g.getFullYear()||m.getMonth()!=g.getMonth()||m.getDate()!=g.getDate()||A.tasks.includes(n)||A.tasks.push(n),(m.getFullYear()!=g.getFullYear()||m.getMonth()!=g.getMonth()||m.getDate()!=g.getDate()&&A.tasks.includes(n))&&(A.tasks.splice(p,1),A==t&&r.removeChild(o),A.tasks.forEach(((n,e)=>{n.index=e}))),localStorage.setItem("allPros",JSON.stringify(i))}(n,o,t,e,l,i),console.log(t)})),p.addEventListener("click",(n=>{n.stopPropagation()})),y.addEventListener("click",(()=>{"visible"==p.style.visibility&&(p.style.visibility="hidden")})),u.addEventListener("click",(()=>{E.textContent=n.desc?n.desc:n.title,g.show(),B.style.display="block"})),m.addEventListener("click",(()=>{const e=document.createElement("dialog"),t=document.createElement("h2"),r=document.createElement("form"),o=document.createElement("label"),A=document.createElement("div"),a=document.createElement("input"),l=document.createElement("span"),d=document.createElement("label"),c=document.createElement("textarea"),p=document.createElement("div"),u=document.createElement("button"),m=document.createElement("button");e.classList.add("edit-task-modal"),t.classList.add("modal-heading"),o.classList.add("label"),o.textContent="Task",A.classList.add("task-title-area"),a.classList.add("task-title"),a.setAttribute("id","edit-title"),a.setAttribute("required",""),l.classList.add("field-required"),l.textContent="Required",d.classList.add("label"),d.textContent="Description",c.classList.add("task-desc"),c.setAttribute("id","edit-desc"),p.classList.add("modal-buttons"),u.classList.add("modal-button"),u.setAttribute("id","edit-task-accept"),u.setAttribute("type","submit"),u.textContent="Accept",m.classList.add("modal-button"),m.setAttribute("id","cancel-edit-task"),m.textContent="Cancel",a.value=n.title,c.value=n.desc,u.addEventListener("click",(()=>{if(n.title=a.value,!a.value)return l.style.display="block",void(a.style.outline="solid 2px #ff6200");s.textContent=n.title,n.desc=c.value,e.close(),B.style.display="none",e.remove(),localStorage.setItem("allPros",JSON.stringify(i))})),m.addEventListener("click",(()=>{e.close(),B.style.display="none",e.remove()})),A.append(a,l),r.append(o,A,d,c),p.append(u,m),e.append(t,r,p),f.appendChild(e),e.show(),B.style.display="block"})),C.addEventListener("click",(()=>{let o;n.important=!n.important,console.log(n.important),n.important?(C.src=j,n.stored=!0,console.log("task stored: ",n.stored),r.tasks.includes(n)||(r.tasks.push(n),console.log("important")),localStorage.setItem("allPros",JSON.stringify(i))):n.important||(C.src=w,r.tasks.includes(n)||n.stored?(o=r.tasks.indexOf(n),r.tasks.splice(o,1),r==t&&e.removeChild(l),r.tasks.forEach(((n,e)=>{n.index=e})),console.log("not important"),localStorage.setItem("allPros",JSON.stringify(i))):localStorage.setItem("allPros",JSON.stringify(i)),console.log("working across states"))})),h.addEventListener("click",(()=>{A.splice(n.index,1),e.removeChild(l),A.forEach(((n,e)=>{n.index=e})),localStorage.setItem("allPros",JSON.stringify(i)),console.log(t)})),d.append(c,p,u,m,C,h),l.append(s,d),e.appendChild(l)}))}document.querySelectorAll(".project-button");const q=document.querySelectorAll(".default-project-button"),Y=document.querySelectorAll(".user-project-button"),L=(document.querySelector(".user-projects"),document.querySelector(".user-projects-list")),z=document.querySelector(".add-project"),I=document.getElementById("add-project"),O=document.getElementById("cancel-project"),U=document.querySelector(".project-modal"),P=document.querySelector(".project-name"),W=document.querySelector(".project-header"),D=document.querySelector(".new-task-btn"),M=document.querySelector(".task-modal"),Z=document.querySelector(".task-title"),N=document.querySelector(".task-desc"),T=document.getElementById("add-task"),F=document.getElementById("cancel-task"),J=(document.querySelector(".project-display"),document.querySelector(".tasks-list")),X=document.querySelector(".task-detail-modal"),G=document.querySelector(".close-detail"),H=document.querySelector(".clear-projects"),R=document.querySelector(".clear-tasks"),V=document.querySelector(".overlay"),$=document.querySelector(".field-required"),_=document.querySelector(".pro-field-required"),Q=document.querySelector(".test-button"),K=document.querySelector(".clear-ls");class nn{constructor(n,e){this.title=n,this.desc=e,this.important=!1,this.stored=!1,this.date,this.pro,this.index}}class en{constructor(n){this.name=n,this.tasks=[],this.index}}const tn=new en("Tasks"),rn=new en("Today"),on=new en("This Week");let An=new en("Important");const an=[rn,on],ln=[];let sn=tn;const dn=[tn,rn,on,An];let cn=0,pn=null;function un(n){let e=n.target.textContent;dn.forEach((n=>{e==n.name&&(sn=n)})),S(W,J,sn,An,an,dn)}function mn(n){n.addEventListener("click",un)}function gn(n,e,t,r){n.addEventListener("click",(()=>{!function(n,e,t){const r=n.children[t.index];n.removeChild(r),e.splice(t.index,1),e.forEach(((n,e)=>{n.index=e,cn--})),sn=e[t.index]?e[t.index]:e[t.index-1]?e[t.index-1]:tn,localStorage.setItem("allPros",JSON.stringify(dn)),S(W,J,sn,An,an,dn),console.log("current pro: ",sn),console.log(e),console.log(n)}(e,t,r)}))}window.onload=()=>{if(pn=localStorage.getItem("allPros"),pn){pn=JSON.parse(localStorage.getItem("allPros"));for(let n=0;n<pn.length;n++)n<4||(ln[n-4]=pn[n]),dn[n]=pn[n];sn=dn[0],an[0]=dn[1],an[1]=dn[2],An=dn[3],n=L,ln.forEach((e=>{let t=document.createElement("li"),r=document.createElement("button"),o=document.createElement("button");t.classList.add("project-li"),r.textContent=e.name,r.setAttribute("class","project-button user-project-button"),r.addEventListener("click",(n=>{n.target.textContent==e.name&&(sn=e),S(W,J,sn,An,an,dn),console.log("current pro: ",sn)})),o.textContent="X",o.setAttribute("id","delete-project"),gn(o,n,ln,e),t.append(r,o),n.appendChild(t)})),S(W,J,sn,An,an,dn),console.log("user pros: ",ln)}else localStorage.setItem("allPros",JSON.stringify(dn));var n;console.clear()},S(W,J,sn,An,an,dn),Q.addEventListener("click",(()=>{console.log("stored pros: ",pn),console.log("allPros: ",JSON.parse(localStorage.getItem("allPros")))})),K.addEventListener("click",(()=>{localStorage.clear(),console.clear(),pn=null})),Y.forEach((n=>{mn(n)})),I.addEventListener("click",(function(){let n=P.value,e=new en(n);if(!n)return _.style.display="block",void(P.style.outline="solid 2px #ff6200");e.index=cn,cn++,ln.push(e),dn.push(e),function(n,e){let t=document.createElement("li"),r=document.createElement("button"),o=document.createElement("button"),i=e[e.length-1];t.classList.add("project-li"),r.textContent=i.name,r.setAttribute("class","project-button user-project-button"),o.textContent="X",o.setAttribute("id","delete-project"),t.append(r,o),n.appendChild(t)}(L,ln),U.close(),V.style.display="none",sn=e,localStorage.setItem("allPros",JSON.stringify(dn)),S(W,J,sn,An,an,dn);const t=document.querySelector(".project-li:last-child"),r=t.parentNode;let o=t.querySelectorAll("button"),i=o[0],A=o[1];i&&mn(i),A&&gn(A,r,ln,e),console.log(ln)})),q.forEach((n=>{n.addEventListener("click",(n=>{let e=n.target.textContent;dn.forEach((n=>{e==n.name&&(sn=n)})),console.log("Current project:",sn),S(W,J,sn,An,an,dn)}))})),function(n,e,t,r,o,i,A,a,l){n.addEventListener("click",(()=>{o.show(),l.style.display="block"})),e.addEventListener("click",(()=>{o.close(),l.style.display="none",C.style.outline="none",h.style.display="none"})),t.addEventListener("click",(()=>{i.show(),l.style.display="block"})),r.addEventListener("click",(()=>{i.close(),l.style.display="none",b.style.outline="none",x.style.display="none",console.log("this guy fucks")})),a.addEventListener("click",(()=>{A.close(),l.style.display="none"}))}(z,O,D,F,U,M,X,G,V),Z.addEventListener("change",(()=>{Z.value&&($.style.display="none",Z.style.outline="none")})),P.addEventListener("change",(()=>{P.value&&(_.style.display="none",P.style.outline="none")})),T.addEventListener("click",(()=>{let n=Z.value,e=N.value,t=new nn(n,e);if(!n)return $.style.display="block",void(Z.style.outline="solid 2px #ff6200");sn==An&&(t.important=!0),sn.tasks.push(t),M.close(),V.style.display="none",localStorage.setItem("allPros",JSON.stringify(dn)),S(W,J,sn,An,an,dn),console.log("current project before: ",sn)})),H.addEventListener("click",(()=>{ln=[],L.innerHTML="",sn=tn,localStorage.setItem("allPros",JSON.stringify(dn)),S(W,J,sn,An,an,dn),cn=0,console.log(ln)})),R.addEventListener("click",(()=>{sn.tasks=[],J.innerHTML="",localStorage.setItem("allPros",JSON.stringify(dn)),console.log(sn.tasks)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,